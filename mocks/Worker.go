// Code generated by mockery v2.32.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Worker is an autogenerated mock type for the Worker type
type Worker[T interface{}] struct {
	mock.Mock
}

// Close provides a mock function with given fields: ctx
func (_m *Worker[T]) Close(ctx context.Context) {
	_m.Called(ctx)
}

// Start provides a mock function with given fields: ctx
func (_m *Worker[T]) Start(ctx context.Context) {
	_m.Called(ctx)
}

// Write provides a mock function with given fields: ctx, item
func (_m *Worker[T]) Write(ctx context.Context, item *T) {
	_m.Called(ctx, item)
}

// NewWorker creates a new instance of Worker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWorker[T interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *Worker[T] {
	mock := &Worker[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
